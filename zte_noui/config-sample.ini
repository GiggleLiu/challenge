[problem]
#int, the way you specify your graph, -1 to use the graph specified by graph_filename.
#also we built in 10 test graphs, which can be specified by 0-9.
graph_specify = -1

#prefix of graph data file, data are stored in 2 files.
#1. <file_prefix>.nod.dat
# 3 columns (float - x axis, float - y axis, bool - 1 for must_pass node)
# e.g. 0.0  0.0  0
#      1.0  0.0  1
#      ...
# x,y is the position of node used for visualization.
#
#2. <file_prefix>.con.dat
# 3 columns (int - i-th node, int - j-th node, float - weight)
# e.g. 1  2  0.5
#      3  4  3.0
#      ...
#
#NOTE: For Convenience, we take the first/last node as start/end node respectively.
graph_file_prefix = sample

#maximum allowed nodes in the solution
max_num_nodes = 100

#in order to meet the constraint of maximum number of nodes,
#we perform bisect search, constraint_maxeval is the search depth.
constraint_maxeval = 5

[ant_colony]
#number of ants
num_ants = 25
#number of repetitions (independant run, in order to test the stableness of solution)
num_ant_repetitions = 1
#number of iterations in a single repetitions
num_ant_iterations = 20

[program]
#a small negative number to ensure passing must_pass edges.
bias_neg=-1
#seed of RNG.
random_seed=2
